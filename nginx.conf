# ── HTTP: keep ACME challenge, redirect everything else to HTTPS
server {
  listen 80;
  server_name glamprinakis.com www.glamprinakis.com;

  # Let’s Encrypt HTTP‑01 challenge
  location ^~ /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  # Redirect to HTTPS
  return 301 https://$host$request_uri;
}



# ── OPTION: redirect https://www → https://glamprinakis.com
server {
  listen 443 ssl http2;
  server_name www.glamprinakis.com;

  ssl_certificate     /etc/letsencrypt/live/glamprinakis.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/glamprinakis.com/privkey.pem;

  return 301 https://glamprinakis.com$request_uri;
}

# ── Main HTTPS site
server {
  listen 443 ssl http2;
  server_name glamprinakis.com;

  ssl_certificate     /etc/letsencrypt/live/glamprinakis.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/glamprinakis.com/privkey.pem;

  # Serve the React build
  root /usr/share/nginx/html;
  index index.html;

  # SPA routing
  location / {
    try_files $uri /index.html;
  }

  # Proxy API requests to the backend container
  location /api/ {
    proxy_pass http://backend:3000/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}

