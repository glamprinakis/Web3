# Initial HTTP server for Let's Encrypt
server {
    listen 80;
    server_name glamprinakis.com www.glamprinakis.com localhost;

    # Let's Encrypt challenges
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Main HTTPS server
server {
    listen 443 ssl;
    server_name glamprinakis.com www.glamprinakis.com;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/glamprinakis.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/glamprinakis.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/glamprinakis.com/chain.pem;

    # Recommended SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000" always;

    # Serve the React build
    root /usr/share/nginx/html;
    index index.html;

    # SPA routing
    location / {
        try_files $uri /index.html;
    }

    # Proxy API requests to the backend container
    location /api/ {
        proxy_pass http://backend:3000/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
