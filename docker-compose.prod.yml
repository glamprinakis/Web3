version: "3.9"

services:
  # Build React and copy artifacts to ./react-build on the host
  frontend-builder:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        REACT_APP_API_URL: "/api"
    volumes:
      - ./react-build:/out
    command: sh -c "cp -r /app/build/* /out/"

  # Public entry point: serves React and proxies /api to backend
  proxy:
    image: nginx:alpine
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"        # add "443:443" after you set up TLS
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./react-build:/usr/share/nginx/html:ro
    networks: [appnet]

  # Your Node API (private; only the proxy can reach it)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: visionstudio
    restart: unless-stopped
    expose:
      - "3000"
    depends_on:
      - db
    networks: [appnet]

  # MySQL (private)
  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: visionstudio
    volumes:
      - mysql-data:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d
    networks: [appnet]

  # Optional: Admin tool (keep private; access via SSH tunnel only)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: ${DB_PASSWORD}
    restart: unless-stopped     
    ports:
      - "127.0.0.1:8000:80"   # only accessible from the server itself
    depends_on:
      - db
    networks: [appnet]

volumes:
  mysql-data:

networks:
  appnet:
    driver: bridge
